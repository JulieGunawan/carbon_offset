scalar Date 

type User {
  user_id: Int!
  name:String!
  email:String!
  password:String!
  role:String!
  avatar:String
  inventory: [Inventory]
  order: [Invoice]
  created_at:Date!
  updated_at:Date!
  deleted_at:Date
}

input CreateUserInput {
  # Example field (placeholder)
  exampleField: Int
}

input UpdateUserInput {
  id: Int!
}

type Query {
#  user: [User]!
  getAllUsers: [User]
  getOneUserById(id: Int!): User
}

type Mutation {
#  createUser(createUserInput: CreateUserInput!): User!
#  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUserById(id: Int!): User!
}
